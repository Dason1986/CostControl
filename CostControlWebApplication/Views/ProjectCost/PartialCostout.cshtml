
@{


}
<style>
    .box-card {
        width: 100%;
    }
</style>
<script type="text/x-template" id="costout">

    <div>
        <bg-add-costout :visible.sync="innerVisiblecostout" v-on:closed="onSearchCost" :item="rec" :projectid="projectid"></bg-add-costout>
        <el-row>
            <el-button icon="el-icon-search" circle></el-button>
            <el-button type="primary" icon="el-icon-edit" circle @@click="onAdd"></el-button>

        </el-row>

        <el-table style="width: 100%" :data="datasource">
            <el-table-column prop="costoutDate" label="日期">
            </el-table-column>
            <el-table-column prop="orderNo" label="單號">
            </el-table-column>
            <el-table-column prop="costTypeId" label="類別" :formatter="formatterContractType">
            </el-table-column>
            <el-table-column prop="departmentId" label="承擔部門" :formatter="formatterDepartment">
            </el-table-column>
            <el-table-column prop="partyId" label="收入支出單位" :formatter="formatterparty">
            </el-table-column>
            <el-table-column prop="title" label="摘要">
            </el-table-column>
            <el-table-column prop="currencyId" label="幣種" :formatter="formatterCurrency">
            </el-table-column>
            <el-table-column prop="receiveAmount" label="借方金額（收）">
            </el-table-column>
            <el-table-column prop="expendAmount" label="貸方金額（支）">
            </el-table-column>
            <el-table-column prop="invoiceNo" label="發票號">
            </el-table-column>
            <el-table-column prop="settlementMethodId" label="結算方式" :formatter="formatterSettlementMethod">
            </el-table-column>
            <el-table-column prop="checkNumber" label="支票號">
            </el-table-column>
            <el-table-column prop="invoiceDate" label="開票日期">
            </el-table-column>
            <el-table-column prop="transferDate" label="轉數/入數日期">
            </el-table-column>
            <el-table-column prop="expectedPaymentDate" label="預計付款日期">
            </el-table-column>
            <el-table-column prop="followUser" label="收/付款跟進人">
            </el-table-column>
            <el-table-column prop="dispatcher" label="調撥單號">
            </el-table-column>
            <el-table-column prop="exchangeDate" label="兌票日期">
            </el-table-column>
            <el-table-column prop="confirmation" label="會計確認" :formatter="formatterBoolean">
            </el-table-column>
            <el-table-column prop="handover" label="單據是否交接" :formatter="formatterBoolean">
            </el-table-column>
            <el-table-column prop="remark" label="備註" :show-overflow-tooltip="true">
            </el-table-column>
            <el-table-column label="操作">
                <template slot-scope="scope">
                    <el-button @@click="onEdit(scope.row)">修改</el-button>
                    <el-button>归档</el-button>

                </template>
            </el-table-column>
        </el-table>

    </div>

</script>

<script type="text/javascript">


    Vue.component('bg-costout',
        {

            template: '#costout',
            data: function () {
                return {


                    innerVisiblecostout: false,
                    rec: {}
                };
            },
            filters: {

            },
            methods: {
    
                onAdd: function () {
                    this.rec = undefined;
                    this.innerVisiblecostout = true
                },

                onEdit: function (val) {
                    this.rec = val;
                    this.innerVisiblecostout = true
                },

                onSearchCost: function () {

                },
                formatterContractType: function (row, column, cellValue, index) {

                    var array =@Html.GetBasics(BasicsCode.ContractType);

                    return this.formatterOf(array , cellValue);

                },
                formatterDepartment: function (row, column, cellValue, index) {

                    var array =@Html.GetBasics(BasicsCode.Department);

                    return this.formatterOf(array, cellValue);

                },

                formatterCurrency: function (row, column, cellValue, index) {

                    var array =@Html.GetBasics(BasicsCode.Currency);

                    return this.formatterOf(array, cellValue);

                },
                formatterSettlementMethod: function (row, column, cellValue, index) {

                    var array =@Html.GetBasics(BasicsCode.SettlementMethod);

                    return this.formatterOf(array, cellValue);

                },
                formatterparty: function (row, column, cellValue, index) {

                    var array =@Html.GetSupplier();

                    return this.formatterOf(array, cellValue);

                },



            },
            updated: function () {

            },
            watch: {


            },
            props: {

                datasource: Array,
                projectid: String,

            }
        });


</script>
